When would you want to use a remote repository rather than keeping all your work local?

    All of the time. There are obvious benefits for working with a team or getting code
    review or advice from others, but even for individual projects it serves as a form
    of backup and enables you to pull it on any computer you're working on.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

    There are a number of possible scenarios where you wouldn't want the local repository
    to be up to date with the remote, but probably the most common is you're working on
    something that conflicts with the changes that have been made to the remote. In general,
    manually controlling the flow of the data enables more fine grained possibilities.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

    A branch is used for making changes to a repository that you want to develop or test out independent
    from the main line, such as adding a feature or refactoring something. Clones are copies of 
    repositories that existed somewhere else, locally or remotely, which you wanted to have your own 
    version of to make changes to or even just to view (if there's no interface for the remote). Forks
    are like clones, but they only apply to GitHub repositories and also backlink to the original 
    repository for accreditation and reference.

What is the benefit of having a copy of the last known state of the remote stored locally?

    It enables you to compare your changes to those on the remote repository even while you're offline.
    Also, when you are actually merging, having the remote mirrored locally makes the process of 
    comparing and editing the files simpler because you aren't transferring data over the internet.